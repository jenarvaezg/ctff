2015.11.03
First sketch of the project's architecture.
TODO: choose technologies that will be used.

2015.11.09
Second sketch, golang will be the language used for almost everything, database might be SQLite.
TODO: Think about database's layout.
TODO(1 month form now): Webapp's alpha - user creation, login, first challenge...

2015.11.10
Starting to play around with GO. Only 1 form form, "register" but it does nothing yet. Now I know how to get sha512 in golang :)

2015.11.13
Added a button to root page which redirects to the create_account form. Added CSRF token (yet to verify with cookie). For the sql driver ran `go get github.com/go-sql-driver/mysql`
TODO: run mysql as normal user (maybe it is like that already)
TODO: create table

2015.11.14
Added login form, first table schema (email 'pk', password, created_date). Now can add users, login works. CSRF will be checked from now on. Cookies!! Created /created page. Created /user/:username pages :)
TODO: Add password directives
TODO: Logout button/(Login/Create) toggle depending on session cookie
TODO: Session cookie should be encrypted or something

2015.11.16
Added user directory, started working on session management, this will handle session cookie's "or something"
TODO: Finish sessions management

2015.11.17
Added /logout, but it is really bugyg, added some buttons at all pages. Added session managemente but it works really badly. Routing is broken
TODO: Check gorilla, it has everything, session control, secure cookies, routing, etc

2015.11.20
Migrated to gorilla. Now we have a challenges database and /challenge and challenge/challenge_id]. First challenge done.
TODO: Add attempts table and maybe success table(?)

2015.11.24
Created attmepts database and some operations, can now do challenges (only first one) and get score for them (it), user page also shows all of the user's finished challenges.
TODO: Still have to add password directives
TODO: Add another challenge
TOOD: Add Hints and edit score depending on number of hints used, maybe on a database(?)
TODO: MAYBE add csrf to solution submit?


2015.11.27
Added 2 more challenges, setup database at IEEE server

2015.12.01
First tries at setting up virtual machine, have 2 levels done already. Password level00: elNivelCeroEsEz
level01: ojoConLosPermisos
level02: laVariablePathEsPeligrosa
Using vagrant, still trying it in order to see how to user it programatically
TODO: Vagrant tutorial(?)
TODO: Set up tmp to be -> drws-wx-wt

2015.12.04
Modified vm, added 2 new levels
Password level02: ensambladorEsTuAmigo
Password level03: laVariablePathEsPeligrosa
Password level04: bienvenidoAlBufferOverflow
Can use vagrant package to export/import vms
TODO: set up tmp

2015.12.07
Added ranking and more information to the webpage.
Challenges now show number of succesful tries and all tries.
Added wargame's levels to the database
Every attempt now updates number of tries at challange table
Set up tmp to be - drws-wx-wt
TODO: Hints, think about how to dinamically launch vms


2016.01.13
Modified databse schema and the way thinks work a little.
Added launch button, after pressing launch, the challenge's start_challenge file will be executed and it's output will be inserted into the /challenge page
First sketch of add_challenge form

2016.01.14
Finished the add_challenge stuff, only missing a little thing, see TODO. Fixed a bug about cookies.
TODO: Create files with execution permission. DOCKER AND SHIT. Add Stop Button!
